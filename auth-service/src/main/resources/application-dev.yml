server:
  port: 8082
  servlet:
    context-path: /auth-api
spring:
  application:
    name: auth-service
  main:
    allow-bean-definition-overriding: true
  datasource:
    driver-class-name: com.mysql.cj.jdbc.Driver
    url: jdbc:mysql://localhost:3306/flight_reservation_oauth?allowPublicKeyRetrieval=true&useSSL=false
    username: flight
    password: flight
    initialization-mode: embedded
  jpa:
    properties:
      hibernate:
        dialect: org.hibernate.dialect.MySQL57InnoDBDialect
        show_sql: true
        hbm2ddl:
          auto: update
        generate-ddl: true
  gateway:
    port: 9090
security:
  oauth2:
    access-token-uri: http://localhost:8080/auth-api/oauth/token
    user-authorization-uri: http://localhost:8080/auth-api/oauth/authorize
eureka:
  instance:
    non-secure-port-enabled: false
    secure-port-enabled: true
    secure-port: ${server.port}
    status-page-url-path: http://localhost:${server.port}/${server.servlet.context-path}/actuator/info
    health-check-url-path: http://localhost:${server.port}/${server.servlet.context-path}/actuator/health
    home-page-url: http://localhost:${server.port}
    lease-renewal-interval-in-seconds: 10 # intervalSeconds between subsequent heartbeats sent to Eureka server
    lease-expiration-duration-in-seconds: 20 # time that Eureka server waits since it received last heartbeat before it can evict this instance
    metadata-map:
      swagger_url: http://localhost:${server.port}/${server.servlet.context-path}/v2/api-docs
  client:
    enabled: true
    register-with-eureka: true
    fetch-registry: true
    registry-fetch-interval-seconds: 10 # how often to fetch the registry from Eureka server
    instance-info-replication-interval-seconds: 10 # how often to replicate instance changes to be replicated to Eureka server
    serviceUrl:
      defaulZone: http://localhost:8761/eureka/
management:
  endpoint:
    health:
      show-details: always